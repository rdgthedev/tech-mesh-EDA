// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TechMesh.User.Infrastructure.Context;

#nullable disable

namespace TechMesh.User.Infrastructure.Migrations
{
    [DbContext(typeof(UserDbContext))]
    [Migration("20250712010905_Change_Column_Id_Of_User_Table_To_ValueGeneratedNever")]
    partial class Change_Column_Id_Of_User_Table_To_ValueGeneratedNever
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TechMesh.User.Domain.Entities.Technology", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("deleted_at");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("technologies", "user");
                });

            modelBuilder.Entity("TechMesh.User.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("level");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("status");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("users", "user");
                });

            modelBuilder.Entity("TechMesh.User.Domain.Entities.UserTechnology", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.Property<Guid>("TechnologyId")
                        .HasColumnType("uuid")
                        .HasColumnName("technology_id");

                    b.HasKey("UserId", "TechnologyId");

                    b.HasIndex("TechnologyId");

                    b.ToTable("users_technologies", "user");
                });

            modelBuilder.Entity("TechMesh.User.Domain.Entities.Technology", b =>
                {
                    b.OwnsOne("TechMesh.User.Domain.ValueObjects.TechnologyName", "Name", b1 =>
                        {
                            b1.Property<Guid>("TechnologyId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(128)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("name");

                            b1.HasKey("TechnologyId");

                            b1.ToTable("technologies", "user");

                            b1.WithOwner()
                                .HasForeignKey("TechnologyId");
                        });

                    b.Navigation("Name")
                        .IsRequired();
                });

            modelBuilder.Entity("TechMesh.User.Domain.Entities.User", b =>
                {
                    b.OwnsOne("TechMesh.User.Domain.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uuid");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(128)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("city");

                            b1.Property<string>("Complement")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("complement");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasMaxLength(128)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("country");

                            b1.Property<string>("Neighborhood")
                                .IsRequired()
                                .HasMaxLength(128)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("neighborhood");

                            b1.Property<int>("Number")
                                .HasColumnType("INTEGER")
                                .HasColumnName("number");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("state");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasMaxLength(128)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("street");

                            b1.Property<string>("ZipCode")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("zip_code");

                            b1.HasKey("UserId");

                            b1.ToTable("users", "user");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("TechMesh.User.Domain.ValueObjects.BirthDate", "BirthDate", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uuid");

                            b1.Property<DateTime>("Value")
                                .HasColumnType("TIMESTAMP")
                                .HasColumnName("birth_date");

                            b1.HasKey("UserId");

                            b1.ToTable("users", "user");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("TechMesh.User.Domain.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasMaxLength(256)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("email");

                            b1.HasKey("UserId");

                            b1.ToTable("users", "user");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("TechMesh.User.Domain.ValueObjects.FullName", "FullName", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(128)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("full_name");

                            b1.HasKey("UserId");

                            b1.ToTable("users", "user");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("TechMesh.User.Domain.ValueObjects.PhoneNumber", "PhoneNumber", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(11)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("phone_number");

                            b1.HasKey("UserId");

                            b1.ToTable("users", "user");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("BirthDate")
                        .IsRequired();

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("FullName")
                        .IsRequired();

                    b.Navigation("PhoneNumber")
                        .IsRequired();
                });

            modelBuilder.Entity("TechMesh.User.Domain.Entities.UserTechnology", b =>
                {
                    b.HasOne("TechMesh.User.Domain.Entities.Technology", "Technology")
                        .WithMany("Users")
                        .HasForeignKey("TechnologyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechMesh.User.Domain.Entities.User", "User")
                        .WithMany("Technologies")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Technology");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TechMesh.User.Domain.Entities.Technology", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("TechMesh.User.Domain.Entities.User", b =>
                {
                    b.Navigation("Technologies");
                });
#pragma warning restore 612, 618
        }
    }
}
